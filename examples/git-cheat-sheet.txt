So you made some new files.  Here is how to share them.


1.  To add everything in the current directory:

git add .

2.  Then commit it to your "local" repository for safe keeping

git commit -a

note that this will open an editor, probably vim unless you changed a
preference.  In the editor there is a list of what files it will
commit.  Hit "i" to insert text, describe the changes, and then "esc
esc wq" to write the file and quit the editor.

3.  Synchronize with the web site.  This is where you get to see if
there are conflicts with what other people have checked in.  If there
are conflicts, then you have work to do.  Good luck.  But if you get
the message "Already up-to-date." then you are good to go.  At the
very least, there were no other changes, or if there are, then there
are no conflicts with your changes.

mac-119562:examples stoughto$ git pull
Username: 
Password: 
Already up-to-date.

4.  Push the results of your work for the rest of us to see.

mac-119562:examples stoughto$ git push
Username: 
Password: 
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (8/8), 321.05 KiB, done.
Total 8 (delta 2), reused 0 (delta 0)
To https://github.com/bmazin/ARCONS-pipeline.git
   e62bfb6..3f3138d  master -> master
mac-119562:examples stoughto$

=====================================================

To grab something from the repository that you do not alrieady have,
one way is to hit the button in the upper right corner of the github
app (Mac) which will sync you up (share local commits on the server
 and retrieve changes from others)

e.g. I now have Chris' 'examples' directory in the tree structure
under ARCONS-pipeline in my local directory ~

I modified git-cheat-sheet.txt and now I want to commit the changes.
First, check which files have been changed with

> git status

antipodes:examples Danica$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       .git-cheat-sheet.txt.swp
#       README.txt
#       git-cheat-sheet.txt
#       simple-xray/
nothing added to commit but untracked files present (use "git add" to track)


You can check the actual changes with

> git diff

Add any files/folders that were created (and possibly even just modified
 by you; see 'git status' output).

> git add git-cheat-sheet.txt

Then commit your changes to your local repository with:

> git commit

antipodes:examples Danica$ git commit git-cheat-sheet.txt
[master (root-commit) 781079f] Danica added more helpful commands and comments 07/24/2012
 1 file changed, 78 insertions(+)
 create mode 100644 git-cheat-sheet.txt


And finally update to the local repository:

> git push

 
